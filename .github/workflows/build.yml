name: Build Executable

# 添加权限配置
permissions:
  contents: write    # 允许创建 release 和上传文件
  packages: read    # 允许下载包

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Check source files
      run: |
        if (!(Test-Path "src/main.py")) {
          throw "Source file src/main.py not found"
        }
        if (!(Test-Path "src/assets/icon.ico")) {
          throw "Icon file src/assets/icon.ico not found"
        }
        
    - name: Create assets directory
      run: |
        mkdir -p dist/src/assets
        copy src/assets/loading.gif dist/src/assets/
        
    - name: Build with PyInstaller
      run: |
        Write-Host "Starting PyInstaller build..."
        Write-Host "Source directory contents:"
        dir src
        
        # 使用 --collect-all 确保收集所有依赖
        pyinstaller --name FreeHttp `
                   --windowed `
                   --icon=src/assets/icon.ico `
                   --add-data "src/assets;src/assets" `
                   --collect-all PyQt6 `
                   --collect-all aiohttp `
                   --collect-all qasync `
                   --collect-all chardet `
                   --distpath dist `
                   --noconfirm `
                   --debug all `
                   src/main.py
                   
        Write-Host "Build completed. Checking directories..."
        Write-Host "Dist directory contents:"
        dir dist -Recurse
        
    - name: Download Inno Setup
      run: |
        Start-Process -FilePath "third-party/innosetup-6.2.2.exe" -Args "/VERYSILENT /SUPPRESSMSGBOXES /NORESTART /SP-" -Wait
        
    - name: Create Inno Setup Script
      run: |
        $version = "${{ github.ref_name }}"
        if ($version.StartsWith("v")) {
            $version = $version.Substring(1)
        }
        if (!$version) {
            $version = "1.0.0"
        }
        
        @"
        [Setup]
        AppName=FreeHttp
        AppVersion=$version
        DefaultDirName={autopf}\FreeHttp
        DefaultGroupName=FreeHttp
        OutputBaseFilename=FreeHttp-Setup
        Compression=lzma2
        SolidCompression=yes
        OutputDir=.
        
        [Files]
        Source: "dist\FreeHttp\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs
        
        [Icons]
        Name: "{group}\FreeHttp"; Filename: "{app}\FreeHttp.exe"
        Name: "{commondesktop}\FreeHttp"; Filename: "{app}\FreeHttp.exe"
        
        [Run]
        Filename: "{app}\FreeHttp.exe"; Description: "Launch FreeHttp"; Flags: postinstall nowait
        "@ | Out-File -FilePath "setup.iss" -Encoding UTF8
        
    - name: Build Installer
      run: |
        & 'C:\Program Files (x86)\Inno Setup 6\ISCC.exe' setup.iss
        
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: FreeHttp-Setup
        path: FreeHttp-Setup.exe
        
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: FreeHttp-Setup.exe